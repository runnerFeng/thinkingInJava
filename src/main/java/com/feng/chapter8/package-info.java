/**
 * @author jinx
 * @date 2018/5/7 15:33
 * Desc:”我曾经被问到，‘求教，Babbage先生，如果你向机器中输入错误的数字，机器可以得到正确的答案吗？’我无法恰当的理解产生这种问题的概念上的混淆“
 *                                                                                         --Charles Babbage(1791-1871)
 *      1.java中除了static和final方法外，其他方法都是后期绑定的。
 *      2.只有非private方法才可以被覆盖；但是还需密切注意覆盖private方法的现象，这是编译器虽然不会报错，但是也不会按我们所期望的来执行。确切的说，
 *        在导出类中，对于基类中的private方法，最好采用不同的名字。
 *      3.静态方法无多态性，因为它与类关联。
 *      4.复杂对象构造器调用顺序：
 *       4.1.调用基类构造器，层层递归。
 *       4.2.按声明顺序调用成员的初始化方法。
 *       4.3.调用导出类的构造器的主体。
 *      5.编写构造器有一条有效的准则：“用尽可能简单的方法使对象进入正常状态”；如果可以的话，避免调用其他方法。在构造器中唯一可以安全调用的方法是final方法，
 *        因为这些方法不能被覆盖。
 *      6.用继承表达行为间的差异，用字段表达状态上的变化（状态模式）。
 */
package com.feng.chapter8;