/**
 * @author jinx
 * @date 2018/5/2 18:04
 * Desc:随着计算机革命的发展，"不安全"的编程方式已经成为编程代价高昂的主因之一。
 *      1.除构造器之外，编译器禁止在其他任何方法中调用构造器。
 *      2.1：对象可能不被垃圾回收
 *      2.2：垃圾回收并不等于“析构”
 *      2.3：垃圾回收只与内存有关
 *      3.构造器实际是静态方法
 *      4.静态初始化只在class对象首次加载的时候进行一次，如果该class未被加载则静态代码不会初始化。
 *      5.{
 *         mug1 = new Mug(1);
 *         mug2 = new Mug(2);
 *         }
 *         类似这种非静态代码块会在对象实力化时在构造方法前执行，而且每次实例化都会执行一次，这种语法对于支持匿名内部类的初始化时必须的，
 *         但是他也可以使得你保证无论调用了哪个显示构造器，某些操作都会发生。
 *      6.数组的创建是在运行时刻进行的。
 *      7.可变参数列表不依赖于自动包装机制，而实际上使用的是基本类型，然而可变参数列表可以和自动包装机制和谐共处。
 */

package com.feng.chapter5;